- module search path: 
    import sys
    sys.path
    sys.path.append() # adding at the runtime


- executing module as a script
    __name__ == "__main__"
    Wrap your multiprocessing code in an if __name__ == '__main__': block in your main script to ensure that it's only executed in the main process. This helps avoid issues with creating child processes during import.
    i.e., better in process management with the OS


- packages
    a package is a set of module
    it provides a namespace
    from <package> import <module>
    if only an package is imported, the subordinated modules are not automatically imported
    previously, '__init__.py' has to be located in an package(probably in Django migrations it still does...), but no longer required
        if only package is imported, then __init__.py is executed
        in __init__.py, you may contain which module to import in a package, e.g., from . import module1


- finding a package
    even with relative import, if the path is not registed in sys.path, then a package cannot be found
    use the following example: 
        import sys, os
        sys.path.append(os.path.dirname(os.getcwd()))  # adding the parent directory to the path; the parent directory contains 'tools' package

        from tools import koreainvest_module


- '-m' option in python
    python -m enables to run a module (no need to put .py)
    (1) execute python code from the command line via modulename rather than filename 
    (2) add a directory to sys.path for use in import resolution and 
    (3) execute python code that contains relative imports from the command line. 


- Package in the pypi
    pip install <package>
    this package is different from the package of moudles described above (more close to distribution)
    there are certain rules to upload a package in pypi, then users can use the package through pip


- OAuth
    lets a service to use a user's information available in 3rd parties without using the user's credentials for the 3rd parties
    instead it uses access tokens


- TMUX
    sudo apt-get install tmux; probably already installed in Ubuntu
    enable virtualenv... then...
    tmux new -s <process_name>
    run code
    ctrl+b, d (detatch)

    tmux ls
    tmux attach -t <process_name>
    exit
    tmux kill-session -t <process_name>


- git 
    git add . <- . means current directory and subordinated directories
    git add -A <- adds all from base directory



### Note for operation

- installations
    pip install -U finance-datareader
    pip install opendartreader 
    pip install pyarrow
    pip install scipy
    pip install mojito2
    pip install seaborn

- config file: location and content

- in mojito module, change path to the token.dat to be in config... :should be adjusted according to relative directory (e.g., ../../config/.. or ../config/..)
    you may use koreainvest_module.py instead
    
- in fdr, for file \FinanceDataReader\krx\listing.py: 
    df_listing = pd.read_html(url, header=0, encoding='euc-kr')[0]  # Use 'euc-kr' encoding

- in OpenDartReader
    dart_finstate.py
    def finstate(...): 
        ...
        if 'message' in jo:
            if '초과' in jo['message']:
                print(jo)
                raise Exception('USAGE LIMIT REACHED...')
        # print(jo)
        # print('전자공시의 재무데이터는 2015년 이후 데이터를 제공합니다') if bsns_year < 2015 else print()
        ...

- Add C:\Users\user\projects\trader\ or equivalent to environment variable